Practice Problem 2.1
--------------------

A. 0x25B9D2 to binary

  0010 0101 1011 1001 1101 0010

B. binary 1010111001001001 to hexadecimal

  0xAE49

C. 0xA8B3D to binary

  1010 1000 1011 0011 1101

D. binary 1100100010110110010110 to hexadecimal

  0x322D96

Practice Problem 2.2
--------------------

n  | 2^n (decimal) | 2^n (hexadecimal)
--------------------------------------
5  | 32            | 0x20
23 | 8388608       | 0x800000
15 | 32768         | 0x8000
13 | 4096          | 0x2000
12 | 8192          | 0x1000
6  | 64            | 0x40
8  | 256           | 0x100

Practice Problem 2.3
--------------------

Decimal | Binary    | Hexadecimal
---------------------------------
0       | 0000 0000 | 0x00
158     | 1001 1110 | 0x9E
76      | 0100 1100 | 0x4C
145     | 1001 0001 | 0x91
174     | 1010 1110 | 0xAE
60      | 0011 1100 | 0x3C
241     | 1111 0001 | 0xF1
117     | 0111 0101 | 0x75
189     | 1011 1101 | 0xBD
245     | 1111 0101 | 0xF5

Practice Problem 2.4
--------------------

A. 0x605c + 0x5 = 0x6061
B. 0x605c − 0x20 = 0x603c
C. 0x605c + 32 = 0x607c
D. 0x60fa − 0x605c = 0x009e

Practice Problem 2.5
--------------------

Consider the following three calls to show_bytes:

int a = 0x12345678;
byte_pointer ap = (byte_pointer) &a;
show_bytes(ap, 1); /* A. */
show_bytes(ap, 2); /* B. */
show_bytes(ap, 3); /* C. */

Indicate the values that will be printed by each call on a little-endian machine
and on a big-endian machine:

  | Little Endian | Big Endian
------------------------------
A | 78            | 12
B | 78 56         | 12 34
C | 78 56 34      | 12 34 56

Practice Problem 2.6
--------------------

A. 0x0027C8F8 = 0000 0000 0010 0111 1100 1000 1111 1000
   0x4A1F23E0 = 0100 1010 0001 1111 0010 0011 1110 0000

B. 00000000001001111100100011111000
              ********************* = 21
     01001010000111110010001111100000

C. 00000000001001111100100011111000
   XX X  X X X                     XX
     01001010000111110010001111100000

Practice Problem 2.7
--------------------

6D 6E 6F 70 71 72

Practice Problem 2.8
--------------------

Operation | Result
----------------------
a         | [01001110]
b         | [11100001]
~a        | [10110001]
~b        | [00011110]
a & b     | [01000000]
a | b     | [11101111]
a ^ b     | [10101111]

Practice Problem 2.9
--------------------

A. The XOR of the colour and 0x7.

1 1 1 Black
1 1 0 Blue
1 0 1 Green
1 0 0 Cyan
0 1 1 Red
0 1 0 Magenta
0 0 1 Yellow
0 0 0 White

B. 

Blue | Green = 0 1 1
Yellow & Cyan = 0 1 0
Red ^ Magenta = 0 0 1

Practice Problem 2.10
---------------------

Step      | *x          | *y
------------------------|---
Initially | a           | b
Step 1    | a           | a ^ b
Step 2    | a ^ (a ^ b) | a ^ b
Step 3    | a ^ (a ^ b) | (a ^ (a ^ b)) ^ (a ^ b)

Step      | *x | *y
----------|----|------
Initially | a  | b
Step 1    | a  | a ^ b
Step 2    | b  | a ^ b
Step 3    | b  | a

Practice Problem 2.11
---------------------

A. first = last = k
B. Because a ^ a = 0.
C. `if (first == last) { return; }`

Practice Problem 2.12
---------------------

A. x & 0xFF
B. ~x ^ 0xFF
C. $x | 0xFF

Practice Problem 2.14
---------------------

Expression | Value | Expression | Value
---------------------------------------
a & b      | 0x44  | a && b     | 1
a | b      | 0x57  | a || b     | 1
~a | ~b    | 0xBB  | !a || !b   | 0
a & !b     | 0x00  | a && ~b    | 1

Practice Problem 2.15
---------------------

!(a & ~b)

Practice Problem 2.16
---------------------

                |                 | Logical         | Arithmetic
a               | a << 2          | a >> 3          | a >> 3
----------------------------------------------------------------------
Hex  | Binary   | Binary   | Hex  | Binary   | Hex  | Binary   | Hex  
----------------------------------------------------------------------
0xD4 | 11010100 | 01010000 | 0x50 | 00011010 | 0x1A | 11111010 | 0xFA
0x64 | 01100100 | 10010000 | 0x90 | 00001100 | 0x0C | 00001100 | 0x0C
0x72 | 01110010 | 11001000 | 0xc8 | 00001110 | 0x0E | 00001110 | 0x0E
0x44 | 01000100 | 00010000 | 0x10 | 00001000 | 0x08 | 00001000 | 0x08

Practice Problem 2.17
---------------------

Hexadecimal | Binary | B2U | B2T
--------------------------------
0xA         | [1010] | 10  | −6
0x1         | [0001] |  1  |  1
0xB         | [1011] | 11  | -5
0x2         | [0010] |  2  |  2
0x7         | [0111] |  7  |  7
0xC         | [1100] | 12  | -4

Practice Problem 2.18
---------------------

A. 0x2e0 = 0010 1110 0000 = 736
B. -0x58 =      0101 1000 = -88
C.  0x28 =      0010 1000 =  40
D. -0x30 =      0011 0000 = -48
E.  0x78 =      0111 1000 = 120
F.  0x88 =      1000 1000 = 136
G. 0x1f8 = 0001 1111 1000 = 504
H.  0xc0 =      1100 0000 = 192
I. -0x48 =      0100 1000 = -72

Practice Problem 2.19
---------------------

x  | T2U
-----------
−1 | [1111]
−5 | [1011]
−6 | [1010]
−4 | [1100]
1  | [0001]
8  | [1000]

Practice Problem 2.21
---------------------

Expression                     | Type     | Evaluation
------------------------------------------------------
-2147483647-1  ==  2147483648U | Unsigned | 1
-2147483647-1  <   2147483647  | Signed   | 1
-2147483647-1U <   2147483647  | Unsigned | 0
-2147483647-1  <  -2147483647  | Signed   | 1
-2147483647-1U <  -2147483647  | Unsigned | 1
